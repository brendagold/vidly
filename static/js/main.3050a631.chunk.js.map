{"version":3,"sources":["components/common/navbar.jsx","services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","utils/paginate.js","components/common/listgroup.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/rentals.jsx","components/notFound.jsx","components/customers.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/register.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","saveMovie","movie","movieInDb","find","m","genresAPI","genreId","Date","now","toString","push","Pagination","itemsCount","pageSize","currentPage","onPageChange","console","log","pagesCount","Math","ceil","pages","_","range","map","page","key","onClick","href","paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","textProperty","valueProperty","selectedItem","onItemSelect","item","defaultProps","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","get","createKey","data","Table","Like","classes","style","cursor","aria-hidden","MoviesTable","onLike","onDelete","SearchBox","onChange","placeholder","e","currentTarget","Movies","state","searchQuery","selectedGenre","handleDelete","setState","handleGenreSelect","handleSearch","query","handleLike","index","indexOf","handlePageChange","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","Fragment","marginBottom","Rentals","NotFound","Customers","Input","error","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","string","required","number","min","max","history","movieId","match","params","replace","mapToViewModel","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","password","Register","email","minDomainAtoms","App","Switch","Route","component","Redirect","from","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3050a631.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies{\" \"}\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n            Login\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n            Register\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.name = movie.title;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst Pagination = ({itemsCount, pageSize, currentPage, onPageChange}) => {\r\n    \r\n    console.log(currentPage);\r\n\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if (pagesCount === 1 ) return null;\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return <nav>\r\n        <ul className=\"pagination\">\r\n        \r\n            {pages.map(page => (<li key={page} className={ page === currentPage ? \"page-item active\" : \"page-item\"}><a className=\"page-link\" onClick={() => onPageChange(page)} href=\"/#\">{page}</a></li>))}\r\n            \r\n        </ul>\r\n    </nav>;\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired, \r\n    pageSize: PropTypes.number.isRequired, \r\n    currentPage: PropTypes.number.isRequired, \r\n    onPageChange: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Pagination;","import _ from 'lodash';\r\n\r\nexport function paginate (items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React from 'react';\r\n\r\nconst ListGroup = ({items, textProperty, valueProperty, selectedItem, onItemSelect}) => {\r\n    return <ul className=\"list-group\">\r\n\r\n        {items.map(item => <li onClick={() => onItemSelect(item)} key={item[valueProperty]} className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}>{item[textProperty]}</li>)}\r\n        \r\n        \r\n    </ul>;\r\n};\r\n\r\nListGroup.defaultProps = {\r\n    textProperty :\"name\",\r\n    valueProperty : \"_id\"\r\n};\r\n \r\nexport default ListGroup;\r\n\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = path => {\r\n        const sortColumn = {...this.props.sortColumn};\r\n         if (sortColumn.path === path)\r\n         sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\r\n         else {\r\n             sortColumn.path = path;\r\n             sortColumn.order = 'asc';\r\n         }\r\n\r\n         this.props.onSort(sortColumn);\r\n    };\r\n\r\n    renderSortIcon = column => {\r\n        const {sortColumn} = this.props\r\n\r\n        if (column.path !== sortColumn.path) return null;\r\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\n        return <i className=\"fa fa-sort-desc\"></i>;\r\n    }\r\n\r\n    render() { \r\n        return ( <thead>\r\n            <tr>{this.props.columns.map(column => (\r\n                <th className=\"clickable\" key={column.path || column.key} onClick={() => this.raiseSort(column.path)}>{column.label}\r\n                {this.renderSortIcon(column)}\r\n                </th>\r\n            ))}</tr>\r\n        </thead> );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\n\r\nclass TableBody extends Component {\r\n    renderCell = (item, column) => {\r\n        if (column.content) return column.content(item);\r\n\r\n        return _.get(item, column.path);\r\n    };\r\n\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key);\r\n    };\r\n    \r\n    render() { \r\n        const {data, columns} = this.props;\r\n\r\n        return (<tbody>\r\n            {data.map(item => (<tr key={item._id}>\r\n            {columns.map(column => <td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>)}\r\n                \r\n            </tr>))}\r\n        </tbody>  \r\n        );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\n\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data}) => {\r\n    \r\n\r\n    return ( \r\n        <table className=\"table\">\r\n            <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n\r\n            <TableBody data={data} columns={columns}/>\r\n            \r\n        </table>\r\n     );\r\n}\r\n \r\nexport default Table;","import React from 'react';\r\n\r\n\r\nconst Like = (props) => {\r\n    let classes= \"fa fa-heart\";\r\n        if (!props.liked) classes += \"-o\";\r\n        return ( \r\n            <i onClick={props.onClick} \r\n            style={{cursor: \"pointer\"}}\r\n            className={classes} aria-hidden=\"true\"/> \r\n         );\r\n    \r\n}\r\n \r\nexport default Like;\r\n\r\n\r\n  \r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Table from './common/table'\r\nimport Like from './common/like';\r\n\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n    {path: 'title', label: 'Title', content: movie => <Link to={`/movies/${movie._id}`} >{movie.title}</Link>},\r\n        {path: 'genre.name', label: 'Genre'},\r\n        {path: 'numberInStock', label: 'Stock'},\r\n        {path: 'dailyRentalRate', label: 'Rate'},\r\n        { key: 'like', content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} /> },        \r\n        { key: 'delete', content: movie => (<button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button>)},\r\n    ]\r\n\r\n    render() { \r\n        const {movies, onSort, sortColumn } = this.props;\r\n    return ( \r\n        <Table columns={this.columns} data={movies} sortColumn={sortColumn} onSort={onSort}/>                    \r\n     );\r\n    }\r\n}\r\n \r\n\r\n\r\n\r\n \r\nexport default MoviesTable;","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport ListGroup from \"./common/listgroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./searchBox\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n\r\n  handleDelete = (movie) => {\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn } = this.state;\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPageData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <ListGroup\r\n                items={this.state.genres}\r\n                onItemSelect={this.handleGenreSelect}\r\n                selectedItem={this.state.selectedGenre}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <Link\r\n                to=\"/movies/new\"\r\n                className=\"btn btn-primary\"\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                New Movie\r\n              </Link>\r\n              <p>Showing {totalCount} movies in the database.</p>\r\n              <SearchBox\r\n                value={this.state.searchQuery}\r\n                onChange={this.handleSearch}\r\n              />\r\n              <MoviesTable\r\n                onDelete={this.handleDelete}\r\n                sortColumn={sortColumn}\r\n                onSort={this.handleSort}\r\n                onLike={this.handleLike}\r\n                movies={movies}\r\n              />\r\n              <Pagination\r\n                itemsCount={totalCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChange={this.handlePageChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return ( <h1>Rentals</h1> );\r\n}\r\n \r\nexport default Rentals;","import React from 'react';\r\n\r\n\r\nconst NotFound = () => {\r\n    return ( <h1>Not Found</h1> );\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return ( <h1>Customers</h1> );\r\n}\r\n \r\nexport default Customers;","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"./../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number In Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = getGenres();\r\n    this.setState({ genres });\r\n\r\n    const movieId = this.props.match.params.id;\r\n    if (movieId === \"new\") return;\r\n\r\n    const movie = getMovie(movieId);\r\n    if (!movie) return this.props.history.replace(\"/not-found\");\r\n\r\n    this.setState({ data: this.mapToViewModel(movie) });\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = () => {\r\n    saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number In Stock\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = () => {\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nclass Register extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email({ minDomainAtoms: 2 }).label(\"Username\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch, Link } from \"react-router-dom\";\nimport NavBar from \"./components/common/navbar\";\nimport Movies from \"./components/movies\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport Customers from \"./components/customers\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport Register from \"./components/register\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <main className=\"container\">\n          <h1>Welcome To Vidly Movie Application</h1>\n          <p>Click Here to Start Application</p>\n          <Link to=\"/movies\">Home Page</Link>\n          <Switch>\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/movies/:id\" component={MovieForm} />\n            <Route path=\"/movies\" component={Movies} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            {/* <Redirect to=\"/not-found\" /> */}\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter><App /></BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}